Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.main) refers to main.o(.bss.xLCDTask_Handle) for xLCDTask_Handle
    main.o(.text.main) refers to main.o(.text.vLCDTask) for vLCDTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.bss.xACDTask_Handle) for xACDTask_Handle
    main.o(.text.main) refers to main.o(.text.vADCTask) for vADCTask
    main.o(.text.main) refers to main.o(.text.INIT_TASK) for INIT_TASK
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.vLCDTask) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.vLCDTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.vLCDTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.vLCDTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vLCDTask) refers to main.o(.bss.lcd) for lcd
    main.o(.text.vLCDTask) refers to lcd.o(.text.LCD_setPosition) for LCD_setPosition
    main.o(.text.vLCDTask) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.vLCDTask) refers to lcd.o(.text.LCD_sendString) for LCD_sendString
    main.o(.text.vLCDTask) refers to lcd.o(.text.LCD_sendNum) for LCD_sendNum
    main.o(.text.vLCDTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vLCDTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.vLCDTask) refers to main.o(.text.vLCDTask) for [Anonymous Symbol]
    main.o(.text.vADCTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.vADCTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vADCTask) refers to adc.o(i.ADCProcessorTrigger) for ADCProcessorTrigger
    main.o(.text.vADCTask) refers to adc.o(i.ADCIntStatus) for ADCIntStatus
    main.o(.text.vADCTask) refers to adc.o(i.ADCIntClear) for ADCIntClear
    main.o(.text.vADCTask) refers to adc.o(i.ADCSequenceDataGet) for ADCSequenceDataGet
    main.o(.text.vADCTask) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    main.o(.text.vADCTask) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    main.o(.text.vADCTask) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    main.o(.text.vADCTask) refers to ceil.o(i.__hardfp_ceil) for __hardfp_ceil
    main.o(.text.vADCTask) refers to dfixu.o(x$fpl$dfixu) for __aeabi_d2uiz
    main.o(.text.vADCTask) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.vADCTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vADCTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.vADCTask) refers to main.o(.text.vADCTask) for [Anonymous Symbol]
    main.o(.text.INIT_TASK) refers to init.o(.text.PortAInit) for PortAInit
    main.o(.text.INIT_TASK) refers to init.o(.text.PortFInit) for PortFInit
    main.o(.text.INIT_TASK) refers to init.o(.text.ADCInit) for ADCInit
    main.o(.text.INIT_TASK) refers to lcd.o(.text.LCD_create) for LCD_create
    main.o(.text.INIT_TASK) refers to main.o(.bss.lcd) for lcd
    main.o(.text.INIT_TASK) refers to lcd.o(.text.LCD_init) for LCD_init
    main.o(.text.INIT_TASK) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.ARM.exidx.text.INIT_TASK) refers to main.o(.text.INIT_TASK) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.delay) refers to main.o(.text.delay) for [Anonymous Symbol]
    main.o(.text.threshold_LED) refers to main.o(.data.threshold) for threshold
    main.o(.text.threshold_LED) refers to main.o(.text.turn_RedLED) for turn_RedLED
    main.o(.text.threshold_LED) refers to main.o(.text.turn_YellowLED) for turn_YellowLED
    main.o(.text.threshold_LED) refers to main.o(.text.turn_BlueLED) for turn_BlueLED
    main.o(.ARM.exidx.text.threshold_LED) refers to main.o(.text.threshold_LED) for [Anonymous Symbol]
    main.o(.text.turn_RedLED) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.ARM.exidx.text.turn_RedLED) refers to main.o(.text.turn_RedLED) for [Anonymous Symbol]
    main.o(.text.turn_YellowLED) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.ARM.exidx.text.turn_YellowLED) refers to main.o(.text.turn_YellowLED) for [Anonymous Symbol]
    main.o(.text.turn_BlueLED) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.ARM.exidx.text.turn_BlueLED) refers to main.o(.text.turn_BlueLED) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.CalcTicks) refers to init.o(.text.CalcTicks) for [Anonymous Symbol]
    init.o(.text.Systick_Handler) refers to init.o(.bss.tickcounter) for tickcounter
    init.o(.ARM.exidx.text.Systick_Handler) refers to init.o(.text.Systick_Handler) for [Anonymous Symbol]
    init.o(.text.PortFInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    init.o(.text.PortFInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    init.o(.text.PortFInit) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    init.o(.text.PortFInit) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    init.o(.text.PortFInit) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    init.o(.ARM.exidx.text.PortFInit) refers to init.o(.text.PortFInit) for [Anonymous Symbol]
    init.o(.text.PortAInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    init.o(.text.PortAInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    init.o(.text.PortAInit) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    init.o(.ARM.exidx.text.PortAInit) refers to init.o(.text.PortAInit) for [Anonymous Symbol]
    init.o(.text.PortEInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    init.o(.text.PortEInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    init.o(.text.PortEInit) refers to gpio.o(i.GPIOPinTypeADC) for GPIOPinTypeADC
    init.o(.ARM.exidx.text.PortEInit) refers to init.o(.text.PortEInit) for [Anonymous Symbol]
    init.o(.text.ADCInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    init.o(.text.ADCInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    init.o(.text.ADCInit) refers to init.o(.text.PortEInit) for PortEInit
    init.o(.text.ADCInit) refers to adc.o(i.ADCSequenceConfigure) for ADCSequenceConfigure
    init.o(.text.ADCInit) refers to adc.o(i.ADCSequenceStepConfigure) for ADCSequenceStepConfigure
    init.o(.text.ADCInit) refers to adc.o(i.ADCSequenceEnable) for ADCSequenceEnable
    init.o(.text.ADCInit) refers to adc.o(i.ADCIntClear) for ADCIntClear
    init.o(.ARM.exidx.text.ADCInit) refers to init.o(.text.ADCInit) for [Anonymous Symbol]
    init.o(.text.UART0Init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    init.o(.text.UART0Init) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    init.o(.text.UART0Init) refers to uart.o(i.UARTDisable) for UARTDisable
    init.o(.text.UART0Init) refers to uart.o(i.UARTClockSourceSet) for UARTClockSourceSet
    init.o(.text.UART0Init) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    init.o(.text.UART0Init) refers to uart.o(i.UARTConfigSetExpClk) for UARTConfigSetExpClk
    init.o(.text.UART0Init) refers to uart.o(i.UARTEnable) for UARTEnable
    init.o(.ARM.exidx.text.UART0Init) refers to init.o(.text.UART0Init) for [Anonymous Symbol]
    init.o(.text.Systick_Init) refers to systick.o(i.SysTickDisable) for SysTickDisable
    init.o(.text.Systick_Init) refers to systick.o(i.SysTickIntDisable) for SysTickIntDisable
    init.o(.text.Systick_Init) refers to init.o(.text.Systick_Handler) for Systick_Handler
    init.o(.text.Systick_Init) refers to systick.o(i.SysTickIntRegister) for SysTickIntRegister
    init.o(.text.Systick_Init) refers to init.o(.text.CalcTicks) for CalcTicks
    init.o(.text.Systick_Init) refers to systick.o(i.SysTickPeriodSet) for SysTickPeriodSet
    init.o(.text.Systick_Init) refers to systick.o(i.SysTickIntEnable) for SysTickIntEnable
    init.o(.text.Systick_Init) refers to systick.o(i.SysTickEnable) for SysTickEnable
    init.o(.ARM.exidx.text.Systick_Init) refers to init.o(.text.Systick_Init) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_create) refers to lcd.o(.text.LCD_create) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_CTRL_BUS) refers to lcd.o(.text.LCD_CTRL_BUS) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_DATA_BUS) refers to lcd.o(.text.LCD_DATA_BUS) for [Anonymous Symbol]
    lcd.o(.text.LCD_setup) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    lcd.o(.text.LCD_setup) refers to lcd.o(.text.LCD_CTRL_BUS) for LCD_CTRL_BUS
    lcd.o(.text.LCD_setup) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    lcd.o(.text.LCD_setup) refers to lcd.o(.text.LCD_DATA_BUS) for LCD_DATA_BUS
    lcd.o(.ARM.exidx.text.LCD_setup) refers to lcd.o(.text.LCD_setup) for [Anonymous Symbol]
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_setup) for LCD_setup
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_CTRL_BUS) for LCD_CTRL_BUS
    lcd.o(.text.LCD_init) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_DATA_BUS) for LCD_DATA_BUS
    lcd.o(.text.LCD_init) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_sendNibble) for LCD_sendNibble
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_clear) for LCD_clear
    lcd.o(.ARM.exidx.text.LCD_init) refers to lcd.o(.text.LCD_init) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendNibble) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_sendNibble) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_sendNibble) refers to lcd.o(.text.LCD_sendNibble) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendByte) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_sendByte) refers to lcd.o(.text.LCD_inc_cnt) for LCD_inc_cnt
    lcd.o(.text.LCD_sendByte) refers to lcd.o(.text.LCD_sendNibble) for LCD_sendNibble
    lcd.o(.ARM.exidx.text.LCD_sendByte) refers to lcd.o(.text.LCD_sendByte) for [Anonymous Symbol]
    lcd.o(.text.LCD_clear) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.text.LCD_clear) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_clear) refers to lcd.o(.text.LCD_clear) for [Anonymous Symbol]
    lcd.o(.text.LCD_inc_cnt) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_inc_cnt) refers to lcd.o(.text.LCD_inc_cnt) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendString) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_sendString) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_sendString) refers to lcd.o(.text.LCD_sendString) for [Anonymous Symbol]
    lcd.o(.text.LCD_setPosition) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_setPosition) refers to lcd.o(.text.LCD_setPosition) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendNum) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_sendNum) refers to lcd.o(.text.LCD_sendNum) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised) for pvPortMalloc.xHeapHasBeenInitialised
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.text.prvHeapInit) for prvHeapInit
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.pvPortMalloc) refers to heap_2.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.ucHeap) for ucHeap
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.ARM.exidx.text.prvHeapInit) refers to heap_2.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.vPortFree) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.vPortFree) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.vPortFree) refers to heap_2.o(.text.vPortFree) for [Anonymous Symbol]
    heap_2.o(.text.xPortGetFreeHeapSize) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_2.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_2.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_2.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    adc.o(i.ADCIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    adc.o(i.ADCIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    adc.o(i.ADCIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    adc.o(i.ADCIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    adc.o(i.ADCSoftwareOversampleConfigure) refers to adc.o(.data) for .data
    adc.o(i.ADCSoftwareOversampleDataGet) refers to adc.o(.data) for .data
    adc.o(i.ADCSoftwareOversampleStepConfigure) refers to adc.o(.data) for .data
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    systick.o(i.SysTickIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    systick.o(i.SysTickIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    uart.o(i.UARTIntRegister) refers to uart.o(.constdata) for .constdata
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntUnregister) refers to uart.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixu) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixur) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ceil.o(i.__hardfp_ceil) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ceil.o(i.__hardfp_ceil) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    ceil.o(i.__hardfp_ceil) refers to drleqf.o(x$fpl$drleqf) for __aeabi_cdrcmple
    ceil.o(i.__hardfp_ceil) refers to daddsub_clz.o(x$fpl$drsb) for __aeabi_drsub
    ceil.o(i.__softfp_ceil) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ceil.o(i.__softfp_ceil) refers to ceil.o(i.__hardfp_ceil) for __hardfp_ceil
    ceil.o(i.ceil) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ceil.o(i.ceil) refers to ceil.o(i.__hardfp_ceil) for __hardfp_ceil
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    daddsub_clz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dadd) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dadd) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    daddsub_clz.o(x$fpl$dadd) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dsub) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$dsub) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    drleqf.o(x$fpl$drleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    drleqf.o(x$fpl$drleqf) refers to dleqf.o(x$fpl$dleqf) for __fpl_dcmple_InfNaN
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    dleqf.o(x$fpl$dleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dleqf.o(x$fpl$dleqf) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dleqf.o(x$fpl$dleqf) refers to dcmpi.o(x$fpl$dcmpinf) for __fpl_dcmp_Inf
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    dcmpi.o(x$fpl$dcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.vLCDTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vADCTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.INIT_TASK), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.text.delay), (62 bytes).
    Removing main.o(.ARM.exidx.text.delay), (8 bytes).
    Removing main.o(.text.threshold_LED), (86 bytes).
    Removing main.o(.ARM.exidx.text.threshold_LED), (8 bytes).
    Removing main.o(.text.turn_RedLED), (20 bytes).
    Removing main.o(.ARM.exidx.text.turn_RedLED), (8 bytes).
    Removing main.o(.text.turn_YellowLED), (20 bytes).
    Removing main.o(.ARM.exidx.text.turn_YellowLED), (8 bytes).
    Removing main.o(.text.turn_BlueLED), (20 bytes).
    Removing main.o(.ARM.exidx.text.turn_BlueLED), (8 bytes).
    Removing main.o(.data.threshold), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.text.CalcTicks), (18 bytes).
    Removing init.o(.ARM.exidx.text.CalcTicks), (8 bytes).
    Removing init.o(.text.Systick_Handler), (16 bytes).
    Removing init.o(.ARM.exidx.text.Systick_Handler), (8 bytes).
    Removing init.o(.ARM.exidx.text.PortFInit), (8 bytes).
    Removing init.o(.ARM.exidx.text.PortAInit), (8 bytes).
    Removing init.o(.ARM.exidx.text.PortEInit), (8 bytes).
    Removing init.o(.ARM.exidx.text.ADCInit), (8 bytes).
    Removing init.o(.text.UART0Init), (86 bytes).
    Removing init.o(.ARM.exidx.text.UART0Init), (8 bytes).
    Removing init.o(.text.Systick_Init), (48 bytes).
    Removing init.o(.ARM.exidx.text.Systick_Init), (8 bytes).
    Removing init.o(.bss.tickcounter), (4 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_create), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_CTRL_BUS), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_DATA_BUS), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_setup), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendNibble), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendByte), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_clear), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_inc_cnt), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendString), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_setPosition), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendNum), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (132 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_2.o(.text), (0 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_2.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_2.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (424 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (366 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (298 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (94 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing adc.o(i.ADCBusy), (8 bytes).
    Removing adc.o(i.ADCClockConfigGet), (40 bytes).
    Removing adc.o(i.ADCClockConfigSet), (28 bytes).
    Removing adc.o(i.ADCComparatorConfigure), (10 bytes).
    Removing adc.o(i.ADCComparatorIntClear), (4 bytes).
    Removing adc.o(i.ADCComparatorIntDisable), (18 bytes).
    Removing adc.o(i.ADCComparatorIntEnable), (16 bytes).
    Removing adc.o(i.ADCComparatorIntStatus), (4 bytes).
    Removing adc.o(i.ADCComparatorRegionSet), (14 bytes).
    Removing adc.o(i.ADCComparatorReset), (40 bytes).
    Removing adc.o(i.ADCHardwareOversampleConfigure), (18 bytes).
    Removing adc.o(i.ADCIntClearEx), (4 bytes).
    Removing adc.o(i.ADCIntDisable), (16 bytes).
    Removing adc.o(i.ADCIntDisableEx), (10 bytes).
    Removing adc.o(i.ADCIntEnable), (16 bytes).
    Removing adc.o(i.ADCIntEnableEx), (8 bytes).
    Removing adc.o(i.ADCIntRegister), (104 bytes).
    Removing adc.o(i.ADCIntStatusEx), (22 bytes).
    Removing adc.o(i.ADCIntUnregister), (108 bytes).
    Removing adc.o(i.ADCPhaseDelayGet), (4 bytes).
    Removing adc.o(i.ADCPhaseDelaySet), (4 bytes).
    Removing adc.o(i.ADCReferenceGet), (8 bytes).
    Removing adc.o(i.ADCReferenceSet), (12 bytes).
    Removing adc.o(i.ADCSequenceDMADisable), (18 bytes).
    Removing adc.o(i.ADCSequenceDMAEnable), (16 bytes).
    Removing adc.o(i.ADCSequenceDisable), (16 bytes).
    Removing adc.o(i.ADCSequenceOverflow), (12 bytes).
    Removing adc.o(i.ADCSequenceOverflowClear), (10 bytes).
    Removing adc.o(i.ADCSequenceUnderflow), (12 bytes).
    Removing adc.o(i.ADCSequenceUnderflowClear), (10 bytes).
    Removing adc.o(i.ADCSoftwareOversampleConfigure), (44 bytes).
    Removing adc.o(i.ADCSoftwareOversampleDataGet), (88 bytes).
    Removing adc.o(i.ADCSoftwareOversampleStepConfigure), (168 bytes).
    Removing adc.o(.data), (6 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinConfigure), (68 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing gpio.o(.constdata), (552 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).
    Removing systick.o(i.SysTickDisable), (14 bytes).
    Removing systick.o(i.SysTickEnable), (14 bytes).
    Removing systick.o(i.SysTickIntDisable), (14 bytes).
    Removing systick.o(i.SysTickIntEnable), (14 bytes).
    Removing systick.o(i.SysTickIntRegister), (24 bytes).
    Removing systick.o(i.SysTickIntUnregister), (18 bytes).
    Removing systick.o(i.SysTickPeriodGet), (10 bytes).
    Removing systick.o(i.SysTickPeriodSet), (10 bytes).
    Removing systick.o(i.SysTickValueGet), (8 bytes).
    Removing uart.o(i.UART9BitAddrSend), (38 bytes).
    Removing uart.o(i.UART9BitAddrSet), (10 bytes).
    Removing uart.o(i.UART9BitDisable), (14 bytes).
    Removing uart.o(i.UART9BitEnable), (14 bytes).
    Removing uart.o(i.UARTBreakCtl), (18 bytes).
    Removing uart.o(i.UARTBusy), (8 bytes).
    Removing uart.o(i.UARTCharGet), (12 bytes).
    Removing uart.o(i.UARTCharGetNonBlocking), (16 bytes).
    Removing uart.o(i.UARTCharPut), (12 bytes).
    Removing uart.o(i.UARTCharPutNonBlocking), (16 bytes).
    Removing uart.o(i.UARTCharsAvail), (10 bytes).
    Removing uart.o(i.UARTClockSourceGet), (6 bytes).
    Removing uart.o(i.UARTClockSourceSet), (6 bytes).
    Removing uart.o(i.UARTConfigGetExpClk), (46 bytes).
    Removing uart.o(i.UARTConfigSetExpClk), (110 bytes).
    Removing uart.o(i.UARTDMADisable), (10 bytes).
    Removing uart.o(i.UARTDMAEnable), (8 bytes).
    Removing uart.o(i.UARTDisable), (30 bytes).
    Removing uart.o(i.UARTDisableSIR), (10 bytes).
    Removing uart.o(i.UARTEnable), (20 bytes).
    Removing uart.o(i.UARTEnableSIR), (18 bytes).
    Removing uart.o(i.UARTFIFODisable), (10 bytes).
    Removing uart.o(i.UARTFIFOEnable), (10 bytes).
    Removing uart.o(i.UARTFIFOLevelGet), (16 bytes).
    Removing uart.o(i.UARTFIFOLevelSet), (6 bytes).
    Removing uart.o(i.UARTFlowControlGet), (8 bytes).
    Removing uart.o(i.UARTFlowControlSet), (12 bytes).
    Removing uart.o(i.UARTIntClear), (4 bytes).
    Removing uart.o(i.UARTIntDisable), (10 bytes).
    Removing uart.o(i.UARTIntEnable), (8 bytes).
    Removing uart.o(i.UARTIntRegister), (88 bytes).
    Removing uart.o(i.UARTIntStatus), (10 bytes).
    Removing uart.o(i.UARTIntUnregister), (88 bytes).
    Removing uart.o(i.UARTLoopbackEnable), (10 bytes).
    Removing uart.o(i.UARTModemControlClear), (14 bytes).
    Removing uart.o(i.UARTModemControlGet), (8 bytes).
    Removing uart.o(i.UARTModemControlSet), (12 bytes).
    Removing uart.o(i.UARTModemStatusGet), (10 bytes).
    Removing uart.o(i.UARTParityModeGet), (8 bytes).
    Removing uart.o(i.UARTParityModeSet), (12 bytes).
    Removing uart.o(i.UARTRxErrorClear), (6 bytes).
    Removing uart.o(i.UARTRxErrorGet), (8 bytes).
    Removing uart.o(i.UARTSmartCardDisable), (10 bytes).
    Removing uart.o(i.UARTSmartCardEnable), (22 bytes).
    Removing uart.o(i.UARTSpaceAvail), (10 bytes).
    Removing uart.o(i.UARTTxIntModeGet), (8 bytes).
    Removing uart.o(i.UARTTxIntModeSet), (12 bytes).
    Removing uart.o(.constdata), (128 bytes).
    Removing cpu.o(.emb_text), (38 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntEnable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntRegister), (52 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing interrupt.o(.constdata), (268 bytes).
    Removing interrupt.o(vtable), (620 bytes).

509 unused section(s) (total 22944 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/daddsub.s                       0x00000000   Number         0  daddsub_clz.o ABSOLUTE
    ../fplib/dcmpi.s                         0x00000000   Number         0  dcmpi.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dfixu.s                         0x00000000   Number         0  dfixu.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dleqf.s                         0x00000000   Number         0  dleqf.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/drleqf.s                        0x00000000   Number         0  drleqf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/ceil.c                        0x00000000   Number         0  ceil.o ABSOLUTE
    Init.c                                   0x00000000   Number         0  init.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    systick.c                                0x00000000   Number         0  systick.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  sysctl.o(.emb_text)
    .emb_text                                0x0000030c   Section        6  sysctl.o(.emb_text)
    $v0                                      0x00000314   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000314   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000428   Section        0  strlen.o(.text)
    .text                                    0x00000466   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004f0   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000500   Section        0  heapauxi.o(.text)
    .text                                    0x00000506   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0000056a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005b8   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000602   Section        0  exit.o(.text)
    .text                                    0x00000614   Section        8  libspace.o(.text)
    .text                                    0x0000061c   Section        0  sys_exit.o(.text)
    .text                                    0x00000628   Section        2  use_no_semi.o(.text)
    .text                                    0x0000062a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x0000062c   Section        0  init.o(.text.ADCInit)
    [Anonymous Symbol]                       0x0000068c   Section        0  main.o(.text.INIT_TASK)
    [Anonymous Symbol]                       0x000006e8   Section        0  lcd.o(.text.LCD_CTRL_BUS)
    [Anonymous Symbol]                       0x000006fc   Section        0  lcd.o(.text.LCD_DATA_BUS)
    [Anonymous Symbol]                       0x00000738   Section        0  lcd.o(.text.LCD_clear)
    [Anonymous Symbol]                       0x00000758   Section        0  lcd.o(.text.LCD_create)
    [Anonymous Symbol]                       0x000007c4   Section        0  lcd.o(.text.LCD_inc_cnt)
    [Anonymous Symbol]                       0x00000820   Section        0  lcd.o(.text.LCD_init)
    [Anonymous Symbol]                       0x000008cc   Section        0  lcd.o(.text.LCD_sendByte)
    [Anonymous Symbol]                       0x00000944   Section        0  lcd.o(.text.LCD_sendNibble)
    [Anonymous Symbol]                       0x000009cc   Section        0  lcd.o(.text.LCD_sendNum)
    [Anonymous Symbol]                       0x00000a38   Section        0  lcd.o(.text.LCD_sendString)
    [Anonymous Symbol]                       0x00000a74   Section        0  lcd.o(.text.LCD_setPosition)
    [Anonymous Symbol]                       0x00000ac8   Section        0  lcd.o(.text.LCD_setup)
    [Anonymous Symbol]                       0x00000b10   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000b70   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000b74   Section        0  init.o(.text.PortAInit)
    [Anonymous Symbol]                       0x00000ba4   Section        0  init.o(.text.PortEInit)
    [Anonymous Symbol]                       0x00000bd8   Section        0  init.o(.text.PortFInit)
    [Anonymous Symbol]                       0x00000c60   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000c80   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000c84   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000cc0   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000dcc   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000e4c   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00000f21   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000f20   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001045   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001044   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001199   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001198   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001205   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001204   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001261   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001260   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000012a5   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000012a4   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00001371   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001370   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x00001389   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x00001388   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x000013b1   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000013b0   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x0000142d   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0000142c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x0000146d   Thumb Code    66  heap_2.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x0000146c   Section        0  heap_2.o(.text.prvHeapInit)
    prvIdleTask                              0x000014b1   Thumb Code   158  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x000014b0   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00001551   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00001550   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x0000157d   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x0000157c   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000015cd   Thumb Code   326  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000015cc   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001715   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001714   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x000017a5   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000017a4   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x0000182d   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x0000182c   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001855   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001854   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00001885   Thumb Code   216  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001884   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x0000195d   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x0000195c   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001985   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001984   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x000019d9   Thumb Code   384  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x000019d8   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001b59   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001b58   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00001bf5   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00001bf4   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00001c29   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001c28   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001c65   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001c64   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001ca9   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001ca8   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001cfd   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001cfc   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001d49   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001d48   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001d69   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001d68   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001e34   Section        0  heap_2.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001fc0   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00001fec   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x0000204c   Section        0  list.o(.text.uxListRemove)
    vADCTask                                 0x00002099   Thumb Code   256  main.o(.text.vADCTask)
    [Anonymous Symbol]                       0x00002098   Section        0  main.o(.text.vADCTask)
    [Anonymous Symbol]                       0x00002198   Section        0  main.o(.text.vApplicationIdleHook)
    vLCDTask                                 0x0000219d   Thumb Code   150  main.o(.text.vLCDTask)
    [Anonymous Symbol]                       0x0000219c   Section        0  main.o(.text.vLCDTask)
    [Anonymous Symbol]                       0x00002234   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002264   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002274   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x000022e0   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x0000231d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0000231c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002330   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00002388   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000023d4   Section        0  heap_2.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002448   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000024c0   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x000026cc   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002730   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x000027a0   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x000028f4   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002918   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002928   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x0000296c   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000029e8   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00002b6c   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002c28   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002c74   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002c84   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002c84   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002d44   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002e9c   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00002ec4   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002f60   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00003068   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x000032dc   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x000034b8   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000036e4   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000037e0   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003878   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000038b0   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000038c4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00003b24   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003c5c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00003db8   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003f4c   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00004170   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.ADCIntClear                            0x000041dc   Section        0  adc.o(i.ADCIntClear)
    i.ADCIntStatus                           0x000041e6   Section        0  adc.o(i.ADCIntStatus)
    i.ADCProcessorTrigger                    0x0000421a   Section        0  adc.o(i.ADCProcessorTrigger)
    i.ADCSequenceConfigure                   0x00004234   Section        0  adc.o(i.ADCSequenceConfigure)
    i.ADCSequenceDataGet                     0x00004294   Section        0  adc.o(i.ADCSequenceDataGet)
    i.ADCSequenceEnable                      0x000042b8   Section        0  adc.o(i.ADCSequenceEnable)
    i.ADCSequenceStepConfigure               0x000042c6   Section        0  adc.o(i.ADCSequenceStepConfigure)
    i.GPIODirModeSet                         0x00004360   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x00004388   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinTypeADC                         0x000044f8   Section        0  gpio.o(i.GPIOPinTypeADC)
    i.GPIOPinTypeGPIOInput                   0x00004514   Section        0  gpio.o(i.GPIOPinTypeGPIOInput)
    i.GPIOPinTypeGPIOOutput                  0x00004530   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinTypeUART                        0x0000454c   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.GPIOPinWrite                           0x00004568   Section        0  gpio.o(i.GPIOPinWrite)
    i.SysCtlPeripheralEnable                 0x00004570   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00004598   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.__hardfp_ceil                          0x000045c8   Section        0  ceil.o(i.__hardfp_ceil)
    $v0                                      0x000046e0   Number         0  daddsub_clz.o(x$fpl$dadd)
    x$fpl$dadd                               0x000046e0   Section      336  daddsub_clz.o(x$fpl$dadd)
    _dadd1                                   0x000046f1   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    $v0                                      0x00004830   Number         0  dcmpi.o(x$fpl$dcmpinf)
    x$fpl$dcmpinf                            0x00004830   Section       24  dcmpi.o(x$fpl$dcmpinf)
    $v0                                      0x00004848   Number         0  ddiv.o(x$fpl$ddiv)
    x$fpl$ddiv                               0x00004848   Section      692  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x0000484f   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    $v0                                      0x00004afc   Number         0  dfixu.o(x$fpl$dfixu)
    x$fpl$dfixu                              0x00004afc   Section       90  dfixu.o(x$fpl$dfixu)
    $v0                                      0x00004b56   Number         0  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dfltu                              0x00004b56   Section       38  dflt_clz.o(x$fpl$dfltu)
    $v0                                      0x00004b7c   Number         0  dleqf.o(x$fpl$dleqf)
    x$fpl$dleqf                              0x00004b7c   Section      120  dleqf.o(x$fpl$dleqf)
    $v0                                      0x00004bf4   Number         0  dmul.o(x$fpl$dmul)
    x$fpl$dmul                               0x00004bf4   Section      340  dmul.o(x$fpl$dmul)
    $v0                                      0x00004d48   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dnaninf                            0x00004d48   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x00004de4   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$dretinf                            0x00004de4   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x00004df0   Number         0  drleqf.o(x$fpl$drleqf)
    x$fpl$drleqf                             0x00004df0   Section      108  drleqf.o(x$fpl$drleqf)
    $v0                                      0x00004e5c   Number         0  daddsub_clz.o(x$fpl$drsb)
    x$fpl$drsb                               0x00004e5c   Section       22  daddsub_clz.o(x$fpl$drsb)
    $v0                                      0x00004e74   Number         0  daddsub_clz.o(x$fpl$dsub)
    x$fpl$dsub                               0x00004e74   Section      476  daddsub_clz.o(x$fpl$dsub)
    _dsub1                                   0x00004e85   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    $v0                                      0x00005050   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00005050   Section       26  fpinit.o(x$fpl$fpinit)
    .L.str.3                                 0x0000506a   Data          22  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000506a   Section        0  main.o(.rodata.str1.1)
    x$fpl$usenofp                            0x0000506a   Section        0  usenofp.o(x$fpl$usenofp)
    .L.str.1                                 0x00005080   Data          22  main.o(.rodata.str1.1)
    .L.str.5                                 0x00005096   Data          13  main.o(.rodata.str1.1)
    .L.str.6                                 0x000050a3   Data           3  main.o(.rodata.str1.1)
    .L.str.2                                 0x000050a6   Data           9  main.o(.rodata.str1.1)
    .L.str                                   0x000050af   Data           9  main.o(.rodata.str1.1)
    .L.str.4                                 0x000050b8   Data          19  main.o(.rodata.str1.1)
    .L.str                                   0x000050cb   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000050cb   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x000050d0   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000050d0   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    xFreeBytesRemaining                      0x20000008   Data           4  heap_2.o(.data.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20000008   Section        0  heap_2.o(.data.xFreeBytesRemaining)
    .bss                                     0x20000010   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x20000094   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000094   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.xHeapHasBeenInitialised     0x20000098   Data           4  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    [Anonymous Symbol]                       0x20000098   Section        0  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    pxCurrentTimerList                       0x200000a0   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200000a0   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200000a4   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200000a4   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200000a8   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200000a8   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200000ac   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200000ac   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200000b0   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200000b0   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000114   Data        8192  heap_2.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000114   Section        0  heap_2.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002114   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002114   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002118   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002118   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x2000211c   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x2000211c   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20002120   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20002120   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20002124   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002124   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002128   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002128   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000212c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000212c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002130   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002130   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002134   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002134   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x2000213c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x2000213c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002150   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002150   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002164   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002164   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002178   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002178   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xEnd                                     0x2000218c   Data           8  heap_2.o(.bss.xEnd)
    [Anonymous Symbol]                       0x2000218c   Section        0  heap_2.o(.bss.xEnd)
    xIdleTaskHandle                          0x20002194   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002194   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x2000219c   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x2000219c   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextTaskUnblockTime                     0x200021a4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200021a4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200021a8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200021a8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200021ac   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200021ac   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200021b0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200021b0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200021c8   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200021c8   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x200021cc   Data           8  heap_2.o(.bss.xStart)
    [Anonymous Symbol]                       0x200021cc   Section        0  heap_2.o(.bss.xStart)
    xSuspendedTaskList                       0x200021d4   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200021d4   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x200021e8   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x200021e8   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200021fc   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200021fc   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002200   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002200   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002204   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002204   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002208   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002208   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002210   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002210   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002210   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002210   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002410   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SysCtlDelay                              0x0000030d   Thumb Code     6  sysctl.o(.emb_text)
    Reset_Handler                            0x00000315   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000409   Thumb Code     0  startup_tm4c123.o(.text)
    strlen                                   0x00000429   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x00000467   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000467   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004cd   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004f1   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004f1   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x00000501   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000503   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000505   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000507   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000507   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000507   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000054f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x0000056b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000056b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000056b   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0000056f   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005b9   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000603   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000615   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000615   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000615   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000061d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000629   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000629   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000062b   Thumb Code     0  indicate_semi.o(.text)
    ADCInit                                  0x0000062d   Thumb Code    96  init.o(.text.ADCInit)
    INIT_TASK                                0x0000068d   Thumb Code    90  main.o(.text.INIT_TASK)
    LCD_CTRL_BUS                             0x000006e9   Thumb Code    20  lcd.o(.text.LCD_CTRL_BUS)
    LCD_DATA_BUS                             0x000006fd   Thumb Code    60  lcd.o(.text.LCD_DATA_BUS)
    LCD_clear                                0x00000739   Thumb Code    32  lcd.o(.text.LCD_clear)
    LCD_create                               0x00000759   Thumb Code   106  lcd.o(.text.LCD_create)
    LCD_inc_cnt                              0x000007c5   Thumb Code    90  lcd.o(.text.LCD_inc_cnt)
    LCD_init                                 0x00000821   Thumb Code   172  lcd.o(.text.LCD_init)
    LCD_sendByte                             0x000008cd   Thumb Code   118  lcd.o(.text.LCD_sendByte)
    LCD_sendNibble                           0x00000945   Thumb Code   134  lcd.o(.text.LCD_sendNibble)
    LCD_sendNum                              0x000009cd   Thumb Code   106  lcd.o(.text.LCD_sendNum)
    LCD_sendString                           0x00000a39   Thumb Code    60  lcd.o(.text.LCD_sendString)
    LCD_setPosition                          0x00000a75   Thumb Code    84  lcd.o(.text.LCD_setPosition)
    LCD_setup                                0x00000ac9   Thumb Code    62  lcd.o(.text.LCD_setup)
    PendSV_Handler                           0x00000b11   Thumb Code   100  port.o(.text.PendSV_Handler)
    PortAInit                                0x00000b75   Thumb Code    46  init.o(.text.PortAInit)
    PortEInit                                0x00000ba5   Thumb Code    50  init.o(.text.PortEInit)
    PortFInit                                0x00000bd9   Thumb Code   122  init.o(.text.PortFInit)
    SVC_Handler                              0x00000c61   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000c85   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000cc1   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    eTaskConfirmSleepModeStatus              0x00000dcd   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x00000e4d   Thumb Code   212  main.o(.text.main)
    pvPortMalloc                             0x00001e35   Thumb Code   396  heap_2.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00001fc1   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00001fed   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x0000204d   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationIdleHook                     0x00002199   Thumb Code     4  main.o(.text.vApplicationIdleHook)
    vListInitialise                          0x00002235   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002265   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002275   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x000022e1   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00002331   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00002389   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x000023d5   Thumb Code   114  heap_2.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00002449   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000024c1   Thumb Code   524  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueWaitForMessageRestricted           0x000026cd   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002731   Thumb Code   110  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x000027a1   Thumb Code   340  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x000028f5   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002919   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002929   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0000296d   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x000029e9   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00002b6d   Thumb Code   186  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00002c29   Thumb Code    76  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00002c75   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002c85   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002d45   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00002e9d   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00002ec5   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002f61   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00003069   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x000032dd   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x000034b9   Thumb Code   556  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000036e5   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000037e1   Thumb Code   152  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00003879   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000038b1   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000038c5   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00003b25   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00003c5d   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00003db9   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003f4d   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00004171   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    ADCIntClear                              0x000041dd   Thumb Code    10  adc.o(i.ADCIntClear)
    ADCIntStatus                             0x000041e7   Thumb Code    52  adc.o(i.ADCIntStatus)
    ADCProcessorTrigger                      0x0000421b   Thumb Code    26  adc.o(i.ADCProcessorTrigger)
    ADCSequenceConfigure                     0x00004235   Thumb Code    96  adc.o(i.ADCSequenceConfigure)
    ADCSequenceDataGet                       0x00004295   Thumb Code    36  adc.o(i.ADCSequenceDataGet)
    ADCSequenceEnable                        0x000042b9   Thumb Code    14  adc.o(i.ADCSequenceEnable)
    ADCSequenceStepConfigure                 0x000042c7   Thumb Code   154  adc.o(i.ADCSequenceStepConfigure)
    GPIODirModeSet                           0x00004361   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x00004389   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinTypeADC                           0x000044f9   Thumb Code    28  gpio.o(i.GPIOPinTypeADC)
    GPIOPinTypeGPIOInput                     0x00004515   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x00004531   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinTypeUART                          0x0000454d   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    GPIOPinWrite                             0x00004569   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    SysCtlPeripheralEnable                   0x00004571   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00004599   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    __hardfp_ceil                            0x000045c9   Thumb Code   252  ceil.o(i.__hardfp_ceil)
    __aeabi_dadd                             0x000046e1   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    _dadd                                    0x000046e1   Thumb Code   332  daddsub_clz.o(x$fpl$dadd)
    __fpl_dcmp_Inf                           0x00004831   Thumb Code    24  dcmpi.o(x$fpl$dcmpinf)
    __aeabi_ddiv                             0x00004849   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x00004849   Thumb Code   556  ddiv.o(x$fpl$ddiv)
    __aeabi_d2uiz                            0x00004afd   Thumb Code     0  dfixu.o(x$fpl$dfixu)
    _dfixu                                   0x00004afd   Thumb Code    90  dfixu.o(x$fpl$dfixu)
    __aeabi_ui2d                             0x00004b57   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x00004b57   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_cdcmple                          0x00004b7d   Thumb Code     0  dleqf.o(x$fpl$dleqf)
    _dcmple                                  0x00004b7d   Thumb Code   120  dleqf.o(x$fpl$dleqf)
    __fpl_dcmple_InfNaN                      0x00004bdf   Thumb Code     0  dleqf.o(x$fpl$dleqf)
    __aeabi_dmul                             0x00004bf5   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00004bf5   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x00004d49   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x00004de5   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_cdrcmple                         0x00004df1   Thumb Code     0  drleqf.o(x$fpl$drleqf)
    _drcmple                                 0x00004df1   Thumb Code   108  drleqf.o(x$fpl$drleqf)
    __aeabi_drsub                            0x00004e5d   Thumb Code     0  daddsub_clz.o(x$fpl$drsb)
    _drsb                                    0x00004e5d   Thumb Code    22  daddsub_clz.o(x$fpl$drsb)
    __aeabi_dsub                             0x00004e75   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    _dsub                                    0x00004e75   Thumb Code   472  daddsub_clz.o(x$fpl$dsub)
    _fp_init                                 0x00005051   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00005069   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00005069   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __I$use$fp                               0x0000506a   Number         0  usenofp.o(x$fpl$usenofp)
    uxTopUsedPriority                        0x000050d8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x000050dc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000050fc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000010   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000070   Data           0  libspace.o(.bss)
    lcd                                      0x20000070   Data          36  main.o(.bss.lcd)
    pxCurrentTCB                             0x2000009c   Data           4  tasks.o(.bss.pxCurrentTCB)
    xACDTask_Handle                          0x20002138   Data           4  main.o(.bss.xACDTask_Handle)
    xLCDTask_Handle                          0x20002198   Data           4  main.o(.bss.xLCDTask_Handle)
    xMutex                                   0x200021a0   Data           4  main.o(.bss.xMutex)
    xQueue                                   0x200021c4   Data           4  main.o(.bss.xQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000315

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00005110, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000050fc, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           94    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1954  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         2160    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO         2162    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO         2164    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO         2022    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO         2030    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2033    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2036    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2038    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2040    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2043    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2045    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2047    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2049    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2051    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2053    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2055    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2057    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2059    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2061    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2063    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2067    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2069    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2071    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         2073    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO         2074    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO         2096    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         2111    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         2113    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         2116    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         2119    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         2121    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         2124    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO         2125    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1978    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1997    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO         2009    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO         1999    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO         2000    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO         2002    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO         2003    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO         2028    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO         2076    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO         2077    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO         2078    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000006   Code   RO         1112    .emb_text           driverlib.lib(sysctl.o)
    0x00000312   0x00000312   0x00000002   PAD
    0x00000314   0x00000314   0x00000114   Code   RO           95  * .text               startup_tm4c123.o
    0x00000428   0x00000428   0x0000003e   Code   RO         1946    .text               c_w.l(strlen.o)
    0x00000466   0x00000466   0x0000008a   Code   RO         1948    .text               c_w.l(rt_memcpy_v6.o)
    0x000004f0   0x000004f0   0x00000010   Code   RO         1950    .text               c_w.l(aeabi_memset4.o)
    0x00000500   0x00000500   0x00000006   Code   RO         1952    .text               c_w.l(heapauxi.o)
    0x00000506   0x00000506   0x00000064   Code   RO         1979    .text               c_w.l(rt_memcpy_w.o)
    0x0000056a   0x0000056a   0x0000004e   Code   RO         1981    .text               c_w.l(rt_memclr_w.o)
    0x000005b8   0x000005b8   0x0000004a   Code   RO         2013    .text               c_w.l(sys_stackheap_outer.o)
    0x00000602   0x00000602   0x00000012   Code   RO         2015    .text               c_w.l(exit.o)
    0x00000614   0x00000614   0x00000008   Code   RO         2025    .text               c_w.l(libspace.o)
    0x0000061c   0x0000061c   0x0000000c   Code   RO         2086    .text               c_w.l(sys_exit.o)
    0x00000628   0x00000628   0x00000002   Code   RO         2101    .text               c_w.l(use_no_semi.o)
    0x0000062a   0x0000062a   0x00000000   Code   RO         2103    .text               c_w.l(indicate_semi.o)
    0x0000062a   0x0000062a   0x00000002   PAD
    0x0000062c   0x0000062c   0x00000060   Code   RO           47    .text.ADCInit       init.o
    0x0000068c   0x0000068c   0x0000005a   Code   RO            8    .text.INIT_TASK     main.o
    0x000006e6   0x000006e6   0x00000002   PAD
    0x000006e8   0x000006e8   0x00000014   Code   RO           63    .text.LCD_CTRL_BUS  lcd.o
    0x000006fc   0x000006fc   0x0000003c   Code   RO           65    .text.LCD_DATA_BUS  lcd.o
    0x00000738   0x00000738   0x00000020   Code   RO           75    .text.LCD_clear     lcd.o
    0x00000758   0x00000758   0x0000006a   Code   RO           61    .text.LCD_create    lcd.o
    0x000007c2   0x000007c2   0x00000002   PAD
    0x000007c4   0x000007c4   0x0000005a   Code   RO           77    .text.LCD_inc_cnt   lcd.o
    0x0000081e   0x0000081e   0x00000002   PAD
    0x00000820   0x00000820   0x000000ac   Code   RO           69    .text.LCD_init      lcd.o
    0x000008cc   0x000008cc   0x00000076   Code   RO           73    .text.LCD_sendByte  lcd.o
    0x00000942   0x00000942   0x00000002   PAD
    0x00000944   0x00000944   0x00000086   Code   RO           71    .text.LCD_sendNibble  lcd.o
    0x000009ca   0x000009ca   0x00000002   PAD
    0x000009cc   0x000009cc   0x0000006a   Code   RO           83    .text.LCD_sendNum   lcd.o
    0x00000a36   0x00000a36   0x00000002   PAD
    0x00000a38   0x00000a38   0x0000003c   Code   RO           79    .text.LCD_sendString  lcd.o
    0x00000a74   0x00000a74   0x00000054   Code   RO           81    .text.LCD_setPosition  lcd.o
    0x00000ac8   0x00000ac8   0x0000003e   Code   RO           67    .text.LCD_setup     lcd.o
    0x00000b06   0x00000b06   0x0000000a   PAD
    0x00000b10   0x00000b10   0x00000064   Code   RO          154    .text.PendSV_Handler  port.o
    0x00000b74   0x00000b74   0x0000002e   Code   RO           43    .text.PortAInit     init.o
    0x00000ba2   0x00000ba2   0x00000002   PAD
    0x00000ba4   0x00000ba4   0x00000032   Code   RO           45    .text.PortEInit     init.o
    0x00000bd6   0x00000bd6   0x00000002   PAD
    0x00000bd8   0x00000bd8   0x0000007a   Code   RO           41    .text.PortFInit     init.o
    0x00000c52   0x00000c52   0x0000000e   PAD
    0x00000c60   0x00000c60   0x00000024   Code   RO          138    .text.SVC_Handler   port.o
    0x00000c84   0x00000c84   0x0000003c   Code   RO          156    .text.SysTick_Handler  port.o
    0x00000cc0   0x00000cc0   0x0000010c   Code   RO          106    .text.SystemInit    system_tm4c123.o
    0x00000dcc   0x00000dcc   0x00000080   Code   RO          378    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00000e4c   0x00000e4c   0x000000d4   Code   RO            2    .text.main          main.o
    0x00000f20   0x00000f20   0x00000122   Code   RO          300    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001042   0x00001042   0x00000002   PAD
    0x00001044   0x00001044   0x00000154   Code   RO          288    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001198   0x00001198   0x0000006a   Code   RO          454    .text.prvCheckForValidListAndQueue  timers.o
    0x00001202   0x00001202   0x00000002   PAD
    0x00001204   0x00001204   0x0000005a   Code   RO          418    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0000125e   0x0000125e   0x00000002   PAD
    0x00001260   0x00001260   0x00000042   Code   RO          235    .text.prvCopyDataFromQueue  queue.o
    0x000012a2   0x000012a2   0x00000002   PAD
    0x000012a4   0x000012a4   0x000000cc   Code   RO          221    .text.prvCopyDataToQueue  queue.o
    0x00001370   0x00001370   0x00000018   Code   RO          294    .text.prvDeleteTCB  tasks.o
    0x00001388   0x00001388   0x00000026   Code   RO          239    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000013ae   0x000013ae   0x00000002   PAD
    0x000013b0   0x000013b0   0x0000007c   Code   RO          420    .text.prvGetExpectedIdleTime  tasks.o
    0x0000142c   0x0000142c   0x00000040   Code   RO          490    .text.prvGetNextExpireTime  timers.o
    0x0000146c   0x0000146c   0x00000042   Code   RO          177    .text.prvHeapInit   heap_2.o
    0x000014ae   0x000014ae   0x00000002   PAD
    0x000014b0   0x000014b0   0x0000009e   Code   RO          326    .text.prvIdleTask   tasks.o
    0x0000154e   0x0000154e   0x00000002   PAD
    0x00001550   0x00001550   0x0000002c   Code   RO          205    .text.prvInitialiseMutex  queue.o
    0x0000157c   0x0000157c   0x0000004e   Code   RO          201    .text.prvInitialiseNewQueue  queue.o
    0x000015ca   0x000015ca   0x00000002   PAD
    0x000015cc   0x000015cc   0x00000146   Code   RO          286    .text.prvInitialiseNewTask  tasks.o
    0x00001712   0x00001712   0x00000002   PAD
    0x00001714   0x00001714   0x0000008e   Code   RO          416    .text.prvInitialiseTaskLists  tasks.o
    0x000017a2   0x000017a2   0x00000002   PAD
    0x000017a4   0x000017a4   0x00000086   Code   RO          504    .text.prvInsertTimerInActiveList  timers.o
    0x0000182a   0x0000182a   0x00000002   PAD
    0x0000182c   0x0000182c   0x00000028   Code   RO          237    .text.prvIsQueueEmpty  queue.o
    0x00001854   0x00001854   0x0000002e   Code   RO          225    .text.prvIsQueueFull  queue.o
    0x00001882   0x00001882   0x00000002   PAD
    0x00001884   0x00001884   0x000000d8   Code   RO          223    .text.prvNotifyQueueSetContainer  queue.o
    0x0000195c   0x0000195c   0x00000028   Code   RO          146    .text.prvPortStartFirstTask  port.o
    0x00001984   0x00001984   0x00000054   Code   RO          498    .text.prvProcessExpiredTimer  timers.o
    0x000019d8   0x000019d8   0x00000180   Code   RO          494    .text.prvProcessReceivedCommands  timers.o
    0x00001b58   0x00001b58   0x0000009a   Code   RO          492    .text.prvProcessTimerOrBlockTask  timers.o
    0x00001bf2   0x00001bf2   0x00000002   PAD
    0x00001bf4   0x00001bf4   0x00000034   Code   RO          502    .text.prvReloadTimer  timers.o
    0x00001c28   0x00001c28   0x0000003c   Code   RO          292    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001c64   0x00001c64   0x00000044   Code   RO          496    .text.prvSampleTimeNow  timers.o
    0x00001ca8   0x00001ca8   0x00000052   Code   RO          500    .text.prvSwitchTimerLists  timers.o
    0x00001cfa   0x00001cfa   0x00000002   PAD
    0x00001cfc   0x00001cfc   0x0000004c   Code   RO          136    .text.prvTaskExitError  port.o
    0x00001d48   0x00001d48   0x0000001e   Code   RO          456    .text.prvTimerTask  timers.o
    0x00001d66   0x00001d66   0x00000002   PAD
    0x00001d68   0x00001d68   0x000000cc   Code   RO          227    .text.prvUnlockQueue  queue.o
    0x00001e34   0x00001e34   0x0000018c   Code   RO          175    .text.pvPortMalloc  heap_2.o
    0x00001fc0   0x00001fc0   0x0000002c   Code   RO          400    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00001fec   0x00001fec   0x0000005e   Code   RO          134    .text.pxPortInitialiseStack  port.o
    0x0000204a   0x0000204a   0x00000002   PAD
    0x0000204c   0x0000204c   0x00000048   Code   RO          125    .text.uxListRemove  list.o
    0x00002094   0x00002094   0x00000004   PAD
    0x00002098   0x00002098   0x00000100   Code   RO            6    .text.vADCTask      main.o
    0x00002198   0x00002198   0x00000004   Code   RO           10    .text.vApplicationIdleHook  main.o
    0x0000219c   0x0000219c   0x00000096   Code   RO            4    .text.vLCDTask      main.o
    0x00002232   0x00002232   0x00000002   PAD
    0x00002234   0x00002234   0x0000002e   Code   RO          117    .text.vListInitialise  list.o
    0x00002262   0x00002262   0x00000002   PAD
    0x00002264   0x00002264   0x0000000e   Code   RO          119    .text.vListInitialiseItem  list.o
    0x00002272   0x00002272   0x00000002   PAD
    0x00002274   0x00002274   0x0000006a   Code   RO          123    .text.vListInsert   list.o
    0x000022de   0x000022de   0x00000002   PAD
    0x000022e0   0x000022e0   0x0000003a   Code   RO          121    .text.vListInsertEnd  list.o
    0x0000231a   0x0000231a   0x00000002   PAD
    0x0000231c   0x0000231c   0x00000014   Code   RO          144    .text.vPortEnableVFP  port.o
    0x00002330   0x00002330   0x00000056   Code   RO          150    .text.vPortEnterCritical  port.o
    0x00002386   0x00002386   0x00000002   PAD
    0x00002388   0x00002388   0x0000004a   Code   RO          152    .text.vPortExitCritical  port.o
    0x000023d2   0x000023d2   0x00000002   PAD
    0x000023d4   0x000023d4   0x00000072   Code   RO          179    .text.vPortFree     heap_2.o
    0x00002446   0x00002446   0x00000002   PAD
    0x00002448   0x00002448   0x00000078   Code   RO          142    .text.vPortSetupTimerInterrupt  port.o
    0x000024c0   0x000024c0   0x0000020c   Code   RO          158    .text.vPortSuppressTicksAndSleep  port.o
    0x000026cc   0x000026cc   0x00000064   Code   RO          265    .text.vQueueWaitForMessageRestricted  queue.o
    0x00002730   0x00002730   0x0000006e   Code   RO          304    .text.vTaskDelay    tasks.o
    0x0000279e   0x0000279e   0x00000002   PAD
    0x000027a0   0x000027a0   0x00000154   Code   RO          290    .text.vTaskDelete   tasks.o
    0x000028f4   0x000028f4   0x00000024   Code   RO          368    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002918   0x00002918   0x0000000e   Code   RO          372    .text.vTaskMissedYield  tasks.o
    0x00002926   0x00002926   0x00000002   PAD
    0x00002928   0x00002928   0x00000042   Code   RO          356    .text.vTaskPlaceOnEventList  tasks.o
    0x0000296a   0x0000296a   0x00000002   PAD
    0x0000296c   0x0000296c   0x0000007c   Code   RO          360    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000029e8   0x000029e8   0x00000182   Code   RO          396    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00002b6a   0x00002b6a   0x00000002   PAD
    0x00002b6c   0x00002b6c   0x000000ba   Code   RO          324    .text.vTaskStartScheduler  tasks.o
    0x00002c26   0x00002c26   0x00000002   PAD
    0x00002c28   0x00002c28   0x0000004c   Code   RO          350    .text.vTaskStepTick  tasks.o
    0x00002c74   0x00002c74   0x00000010   Code   RO          298    .text.vTaskSuspendAll  tasks.o
    0x00002c84   0x00002c84   0x000000be   Code   RO          316    .text.vTaskSwitchContext  tasks.o
    0x00002d42   0x00002d42   0x00000002   PAD
    0x00002d44   0x00002d44   0x00000156   Code   RO          140    .text.xPortStartScheduler  port.o
    0x00002e9a   0x00002e9a   0x00000002   PAD
    0x00002e9c   0x00002e9c   0x00000026   Code   RO          203    .text.xQueueCreateMutex  queue.o
    0x00002ec2   0x00002ec2   0x00000002   PAD
    0x00002ec4   0x00002ec4   0x0000009a   Code   RO          199    .text.xQueueGenericCreate  queue.o
    0x00002f5e   0x00002f5e   0x00000002   PAD
    0x00002f60   0x00002f60   0x00000108   Code   RO          197    .text.xQueueGenericReset  queue.o
    0x00003068   0x00003068   0x00000274   Code   RO          213    .text.xQueueGenericSend  queue.o
    0x000032dc   0x000032dc   0x000001dc   Code   RO          233    .text.xQueueReceive  queue.o
    0x000034b8   0x000034b8   0x0000022c   Code   RO          217    .text.xQueueSemaphoreTake  queue.o
    0x000036e4   0x000036e4   0x000000fc   Code   RO          370    .text.xTaskCheckForTimeOut  tasks.o
    0x000037e0   0x000037e0   0x00000098   Code   RO          284    .text.xTaskCreate   tasks.o
    0x00003878   0x00003878   0x00000038   Code   RO          390    .text.xTaskGetSchedulerState  tasks.o
    0x000038b0   0x000038b0   0x00000014   Code   RO          332    .text.xTaskGetTickCount  tasks.o
    0x000038c4   0x000038c4   0x00000260   Code   RO          330    .text.xTaskIncrementTick  tasks.o
    0x00003b24   0x00003b24   0x00000138   Code   RO          394    .text.xTaskPriorityDisinherit  tasks.o
    0x00003c5c   0x00003c5c   0x0000015c   Code   RO          392    .text.xTaskPriorityInherit  tasks.o
    0x00003db8   0x00003db8   0x00000192   Code   RO          362    .text.xTaskRemoveFromEventList  tasks.o
    0x00003f4a   0x00003f4a   0x00000002   PAD
    0x00003f4c   0x00003f4c   0x00000222   Code   RO          302    .text.xTaskResumeAll  tasks.o
    0x0000416e   0x0000416e   0x00000002   PAD
    0x00004170   0x00004170   0x0000006c   Code   RO          452    .text.xTimerCreateTimerTask  timers.o
    0x000041dc   0x000041dc   0x0000000a   Code   RO          531    i.ADCIntClear       driverlib.lib(adc.o)
    0x000041e6   0x000041e6   0x00000034   Code   RO          538    i.ADCIntStatus      driverlib.lib(adc.o)
    0x0000421a   0x0000421a   0x0000001a   Code   RO          543    i.ADCProcessorTrigger  driverlib.lib(adc.o)
    0x00004234   0x00004234   0x00000060   Code   RO          546    i.ADCSequenceConfigure  driverlib.lib(adc.o)
    0x00004294   0x00004294   0x00000024   Code   RO          549    i.ADCSequenceDataGet  driverlib.lib(adc.o)
    0x000042b8   0x000042b8   0x0000000e   Code   RO          551    i.ADCSequenceEnable  driverlib.lib(adc.o)
    0x000042c6   0x000042c6   0x0000009a   Code   RO          554    i.ADCSequenceStepConfigure  driverlib.lib(adc.o)
    0x00004360   0x00004360   0x00000028   Code   RO          804    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00004388   0x00004388   0x00000170   Code   RO          816    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x000044f8   0x000044f8   0x0000001c   Code   RO          819    i.GPIOPinTypeADC    driverlib.lib(gpio.o)
    0x00004514   0x00004514   0x0000001c   Code   RO          827    i.GPIOPinTypeGPIOInput  driverlib.lib(gpio.o)
    0x00004530   0x00004530   0x0000001c   Code   RO          828    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x0000454c   0x0000454c   0x0000001c   Code   RO          840    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x00004568   0x00004568   0x00000006   Code   RO          846    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x0000456e   0x0000456e   0x00000002   PAD
    0x00004570   0x00004570   0x00000028   Code   RO         1146    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00004598   0x00004598   0x0000002c   Code   RO         1150    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x000045c4   0x000045c4   0x00000004   PAD
    0x000045c8   0x000045c8   0x00000118   Code   RO         1972    i.__hardfp_ceil     m_wm.l(ceil.o)
    0x000046e0   0x000046e0   0x00000150   Code   RO         1983    x$fpl$dadd          fz_wm.l(daddsub_clz.o)
    0x00004830   0x00004830   0x00000018   Code   RO         2023    x$fpl$dcmpinf       fz_wm.l(dcmpi.o)
    0x00004848   0x00004848   0x000002b4   Code   RO         1957    x$fpl$ddiv          fz_wm.l(ddiv.o)
    0x00004afc   0x00004afc   0x0000005a   Code   RO         1960    x$fpl$dfixu         fz_wm.l(dfixu.o)
    0x00004b56   0x00004b56   0x00000026   Code   RO         1964    x$fpl$dfltu         fz_wm.l(dflt_clz.o)
    0x00004b7c   0x00004b7c   0x00000078   Code   RO         2011    x$fpl$dleqf         fz_wm.l(dleqf.o)
    0x00004bf4   0x00004bf4   0x00000154   Code   RO         1970    x$fpl$dmul          fz_wm.l(dmul.o)
    0x00004d48   0x00004d48   0x0000009c   Code   RO         1989    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x00004de4   0x00004de4   0x0000000c   Code   RO         1991    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x00004df0   0x00004df0   0x0000006c   Code   RO         1993    x$fpl$drleqf        fz_wm.l(drleqf.o)
    0x00004e5c   0x00004e5c   0x00000016   Code   RO         1984    x$fpl$drsb          fz_wm.l(daddsub_clz.o)
    0x00004e72   0x00004e72   0x00000002   PAD
    0x00004e74   0x00004e74   0x000001dc   Code   RO         1985    x$fpl$dsub          fz_wm.l(daddsub_clz.o)
    0x00005050   0x00005050   0x0000001a   Code   RO         2084    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000506a   0x0000506a   0x00000000   Code   RO         1995    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x0000506a   0x0000506a   0x00000061   Data   RO           25    .rodata.str1.1      main.o
    0x000050cb   0x000050cb   0x00000005   Data   RO          438    .rodata.str1.1      tasks.o
    0x000050d0   0x000050d0   0x00000008   Data   RO          507    .rodata.str1.1      timers.o
    0x000050d8   0x000050d8   0x00000004   Data   RO          423    .rodata.uxTopUsedPriority  tasks.o
    0x000050dc   0x000050dc   0x00000020   Data   RO         2159    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00005100, Size: 0x00002410, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00005100   0x00000004   Data   RW          108    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00005104   0x00000004   Data   RW          164    .data.uxCriticalNesting  port.o
    0x20000008   0x00005108   0x00000004   Data   RW          186    .data.xFreeBytesRemaining  heap_2.o
    0x2000000c   0x0000510c   0x00000004   PAD
    0x20000010        -       0x00000060   Zero   RW         2026    .bss                c_w.l(libspace.o)
    0x20000070        -       0x00000024   Zero   RW           28    .bss.lcd            main.o
    0x20000094        -       0x00000004   Zero   RW          511    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000098        -       0x00000004   Zero   RW          185    .bss.pvPortMalloc.xHeapHasBeenInitialised  heap_2.o
    0x2000009c        -       0x00000004   Zero   RW          422    .bss.pxCurrentTCB   tasks.o
    0x200000a0        -       0x00000004   Zero   RW          509    .bss.pxCurrentTimerList  timers.o
    0x200000a4        -       0x00000004   Zero   RW          433    .bss.pxDelayedTaskList  tasks.o
    0x200000a8        -       0x00000004   Zero   RW          434    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200000ac        -       0x00000004   Zero   RW          510    .bss.pxOverflowTimerList  timers.o
    0x200000b0        -       0x00000064   Zero   RW          424    .bss.pxReadyTasksLists  tasks.o
    0x20000114        -       0x00002000   Zero   RW          189    .bss.ucHeap         heap_2.o
    0x20002114        -       0x00000001   Zero   RW          162    .bss.ucMaxSysCallPriority  port.o
    0x20002115   0x0000510c   0x00000003   PAD
    0x20002118        -       0x00000004   Zero   RW          163    .bss.ulMaxPRIGROUPValue  port.o
    0x2000211c        -       0x00000004   Zero   RW          167    .bss.ulStoppedTimerCompensation  port.o
    0x20002120        -       0x00000004   Zero   RW          166    .bss.ulTimerCountsForOneTick  port.o
    0x20002124        -       0x00000004   Zero   RW          429    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002128        -       0x00000004   Zero   RW          428    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000212c        -       0x00000004   Zero   RW          431    .bss.uxSchedulerSuspended  tasks.o
    0x20002130        -       0x00000004   Zero   RW          426    .bss.uxTaskNumber   tasks.o
    0x20002134        -       0x00000004   Zero   RW          425    .bss.uxTopReadyPriority  tasks.o
    0x20002138        -       0x00000004   Zero   RW           27    .bss.xACDTask_Handle  main.o
    0x2000213c        -       0x00000014   Zero   RW          512    .bss.xActiveTimerList1  timers.o
    0x20002150        -       0x00000014   Zero   RW          513    .bss.xActiveTimerList2  timers.o
    0x20002164        -       0x00000014   Zero   RW          443    .bss.xDelayedTaskList1  tasks.o
    0x20002178        -       0x00000014   Zero   RW          444    .bss.xDelayedTaskList2  tasks.o
    0x2000218c        -       0x00000008   Zero   RW          188    .bss.xEnd           heap_2.o
    0x20002194        -       0x00000004   Zero   RW          439    .bss.xIdleTaskHandle  tasks.o
    0x20002198        -       0x00000004   Zero   RW           26    .bss.xLCDTask_Handle  main.o
    0x2000219c        -       0x00000004   Zero   RW          165    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200021a0        -       0x00000004   Zero   RW           23    .bss.xMutex         main.o
    0x200021a4        -       0x00000004   Zero   RW          440    .bss.xNextTaskUnblockTime  tasks.o
    0x200021a8        -       0x00000004   Zero   RW          442    .bss.xNumOfOverflows  tasks.o
    0x200021ac        -       0x00000004   Zero   RW          441    .bss.xPendedTicks   tasks.o
    0x200021b0        -       0x00000014   Zero   RW          437    .bss.xPendingReadyList  tasks.o
    0x200021c4        -       0x00000004   Zero   RW           24    .bss.xQueue         main.o
    0x200021c8        -       0x00000004   Zero   RW          430    .bss.xSchedulerRunning  tasks.o
    0x200021cc        -       0x00000008   Zero   RW          187    .bss.xStart         heap_2.o
    0x200021d4        -       0x00000014   Zero   RW          435    .bss.xSuspendedTaskList  tasks.o
    0x200021e8        -       0x00000014   Zero   RW          427    .bss.xTasksWaitingTermination  tasks.o
    0x200021fc        -       0x00000004   Zero   RW          432    .bss.xTickCount     tasks.o
    0x20002200        -       0x00000004   Zero   RW          506    .bss.xTimerQueue    timers.o
    0x20002204        -       0x00000004   Zero   RW          508    .bss.xTimerTaskHandle  timers.o
    0x20002208        -       0x00000004   Zero   RW          436    .bss.xYieldPending  tasks.o
    0x2000220c   0x0000510c   0x00000004   PAD
    0x20002210        -       0x00000000   Zero   RW           93    HEAP                startup_tm4c123.o
    0x20002210        -       0x00000200   Zero   RW           92    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       576          0          0          4       8212       2835   heap_2.o
       314          0          0          0          0       1456   init.o
      1044          0          0          0          0       3272   lcd.o
       296          0          0          0          0       2375   list.o
       712         24         97          0         52       2999   main.o
      1572         16          0          4         17       4917   port.o
      3152          0          0          0          0      17027   queue.o
       276         24        620          0        512       5524   startup_tm4c123.o
       268          0          0          4          0       6787   system_tm4c123.o
      5966          0          9          0        260      27232   tasks.o
      1266         10          8          0         60       9504   timers.o

    ----------------------------------------------------------------------
     15556         74        766         12       9124      83928   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       114          0          0          0         11          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       388          0          0          0          0       9638   adc.o
       526         14          0          0          0       4893   gpio.o
        90          8          0          0          0       1401   sysctl.o
       834         16          0          0          0        516   daddsub_clz.o
        24          0          0          0          0        116   dcmpi.o
       692        140          0          0          0        264   ddiv.o
        90          4          0          0          0        140   dfixu.o
        38          0          0          0          0        116   dflt_clz.o
       120          4          0          0          0        140   dleqf.o
       340         12          0          0          0        152   dmul.o
       156          4          0          0          0        140   dnaninf.o
        12          0          0          0          0        116   dretinf.o
       108          0          0          0          0        128   drleqf.o
        26          0          0          0          0        116   fpinit.o
         0          0          0          0          0          0   usenofp.o
       280         28          0          0          0        156   ceil.o

    ----------------------------------------------------------------------
      4410        250          0          0         96      18988   Library Totals
        16          4          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       670         16          0          0         96        956   c_w.l
      1004         22          0          0          0      15932   driverlib.lib
      2440        180          0          0          0       1944   fz_wm.l
       280         28          0          0          0        156   m_wm.l

    ----------------------------------------------------------------------
      4410        250          0          0         96      18988   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     19966        324        766         12       9220      99720   Grand Totals
     19966        324        766         12       9220      99720   ELF Image Totals
     19966        324        766         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20732 (  20.25kB)
    Total RW  Size (RW Data + ZI Data)              9232 (   9.02kB)
    Total ROM Size (Code + RO Data + RW Data)      20744 (  20.26kB)

==============================================================================

